@page "/"
@using FlashCommon
@using System.Reactive;
@using System.Reactive.Linq;
@using System.Reactive.Threading.Tasks;
@using System.Net.Http;
@inject HttpClient client
@inject IJSRuntime JSRuntime;
@inject NavigationManager navMgr;
@inject IDynamicDB ddb;

<div id="firebaseui-auth-container"></div>

@code {
    private bool isFirstTime = true;

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            JSCaller.Call<User>(JSRuntime, "flash.firebaseLogin").Subscribe(user =>
            {
                ddb.Connect();
                ddb.CurrentDB.Subscribe(db =>
                {
                    db.GetUserInfo(user.uid).Subscribe(info =>
                    {
                        if (info == null)
                        {
                            JSCaller.Write(JSRuntime, "Adding new user");
                            AddNewUser(db, user).Subscribe(_ =>
                            {
                                JSCaller.Write(JSRuntime, "User added");
                                db.SetCurrentUserId(user.uid);
                                Navigate();
                            });
                            return;
                        }
                        JSCaller.Write(JSRuntime, "User exists");

                        db.SetCurrentUserId(info.uid);
                        Navigate();
                    });
                });
                return;
            });
        }
        return base.OnAfterRenderAsync(firstRender);
    }

    private void Navigate()
    {
        if (!isFirstTime) return;
        isFirstTime = false;
        navMgr.NavigateTo("/player");
        //navMgr.NavigateTo("/recorder");
    }


    // Add a new user in the database
    // Data for topic and prompts will be setup in the recording page
    public IObservable<Unit> AddNewUser(IDatabase db, User user)
    {
        user.accountType = "pro";
        return db.AddNewUser(user);
    }

}
