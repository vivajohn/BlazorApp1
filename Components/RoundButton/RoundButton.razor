@using System.Reactive;
@using System.Reactive.Threading.Tasks;
@inject IJSRuntime JSRuntime;

<link href="css/RoundButton.css" rel="stylesheet" />

<div class="roundbtn @(Big == true ? "roundbtn-big" : "roundbtn-small")" @onclick:stopPropagation="true">
    <MatIconButton Class=@(Big == true ? "roundbtn-bigiconx" : "roundbtn-smalliconx") Disabled=@Disabled Icon=@Icon @onclick="OnClick"></MatIconButton>
</div>

@code {
    [Parameter]
    public string Icon { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public bool Big { get; set; } = false;

    [Parameter]
    public EventCallback Click { get; set; }

    void OnClick()
    {
        Click.InvokeAsync(null);

        // Material button does not give proper haptic feedback: this is a workaround
        Task.Delay(250).ToObservable().Subscribe(_ => JSRuntime.InvokeAsync<Unit>("flash.loseFocus", null));
    }
}
