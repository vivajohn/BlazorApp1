@using FlashCommon
@using System.Reactive.Linq
@inject IDynamicDB ddb
@inject IJSRuntime JSRuntime;
@inject NavigationManager navMgr;

<link href="css/Navbar.css" rel="stylesheet" />

<div class="navbar">
    <div class="navbar-left">
        <RoundButton Icon="power_settings_new" Click="@LogOff"></RoundButton>
        <div class="rowfullcenter">
            <RoundButton Icon="toggle_on" Click="@ToggleDb"></RoundButton>
            <div class="dbname">@DbName</div>
        </div>
        @LeftContent
    </div>
    <div class="navbar-middle">
        @MiddleContent
    </div>
    <div class="navbar-right">
        @RightContent
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment LeftContent { get; set; }
    [Parameter]
    public RenderFragment MiddleContent { get; set; }
    [Parameter]
    public RenderFragment RightContent { get; set; }

    string DbName;

    protected override Task OnInitializedAsync()
    {
        ddb.CurrentDB.Subscribe(db =>
        {
            DbName = db.Name;
            InvokeAsync(() => StateHasChanged());
        });
        return base.OnInitializedAsync();
    }

    public void LogOff()
    {
        JSCaller.Call<User>(JSRuntime, "flash.firebaseLogout").Subscribe(u => navMgr.NavigateTo("/"));
    }

    public void ToggleDb()
    {
        ddb.CurrentDB.Take(1).Subscribe(db =>
        {
            DBChange.To(db.Name == DBNames.Azure.ToString() ? DBNames.Firebase : DBNames.Azure);
        });
    }
}
